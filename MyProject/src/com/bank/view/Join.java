/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.bank.view;

import com.bank.model.BankUserDAO;
import com.bank.model.BankUserDTO;
import com.bank.model.BankUserService;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ad
 */
public class Join extends javax.swing.JFrame implements ActionListener, KeyListener{
    BankUserDTO dto;
    BankUserDAO dao;
    static private int id_check;
    static private int jumin_check;
    final static private int ID_NEW = 1;
    final static private int ID_OVERLAP = 2;
    final static private int JUMIN_NEW = 1;
    final static private int JUMIN_OVERLAP = 2;
    public static final int MEMBER_REGISTER=1;  //회원가입
    public static final int MEMBER_EDIT=2;  //회원정보수정
    private int flag=MEMBER_REGISTER;
    
    
    /**
     * Creates new form Join
     */
    public Join() {
        super("회원가입");
        initComponents();
        init();
        addMotion();
    }
    
    public Join(int flag){
        this();
        this.flag=flag;
        memberforc();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        laid = new javax.swing.JLabel();
        tfid = new javax.swing.JTextField();
        lapwd = new javax.swing.JLabel();
        tfpwd = new javax.swing.JPasswordField();
        btjoin = new javax.swing.JButton();
        btcancel = new javax.swing.JButton();
        btoverlap = new javax.swing.JButton();
        laname = new javax.swing.JLabel();
        tfname = new javax.swing.JTextField();
        tfjumin1 = new javax.swing.JTextField();
        lajumin = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfjumin2 = new javax.swing.JPasswordField();
        latel = new javax.swing.JLabel();
        tftel2 = new javax.swing.JTextField();
        cbtel1 = new javax.swing.JComboBox<>();
        tftel3 = new javax.swing.JTextField();
        laemail = new javax.swing.JLabel();
        cbemail2 = new javax.swing.JComboBox<>();
        tfemail1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfemail3 = new javax.swing.JTextField();
        lapwdcheck = new javax.swing.JLabel();
        tfpwdcheck = new javax.swing.JPasswordField();
        lapwdequals = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        laid.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        laid.setText("아이디");

        lapwd.setText("비밀번호");

        btjoin.setText("확인");

        btcancel.setText("취소");

        btoverlap.setText("중복확인");

        laname.setText("이름");

        lajumin.setText("주민번호");

        jLabel1.setText("-");

        latel.setText("전화번호");

        cbtel1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "010", "011", "012" }));

        laemail.setText("이메일");

        cbemail2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "naver.com", "daum.net", "gmail.com", "join.com", "직접입력" }));

        jLabel2.setText("@");

        lapwdcheck.setText("비밀번호 확인");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(laid, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lapwd))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfjumin1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfemail1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel2))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(cbtel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(tftel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btjoin, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfjumin2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(tftel3, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbemail2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(tfemail3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addComponent(btcancel))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(tfpwd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                                    .addComponent(tfname, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfid, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(18, 18, 18)
                                .addComponent(btoverlap)))
                        .addGap(33, 33, 33))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lajumin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(latel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(laemail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(laname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lapwdcheck)
                                .addGap(18, 18, 18)
                                .addComponent(tfpwdcheck, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lapwdequals, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(laid)
                    .addComponent(btoverlap))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lapwd)
                    .addComponent(tfpwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lapwdcheck)
                    .addComponent(tfpwdcheck, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lapwdequals, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(laname))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfjumin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lajumin)
                    .addComponent(jLabel1)
                    .addComponent(tfjumin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tftel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(latel)
                    .addComponent(cbtel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tftel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfemail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(laemail)
                    .addComponent(cbemail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(tfemail3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btjoin)
                    .addComponent(btcancel))
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Join.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Join.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Join.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Join.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Join().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btcancel;
    private javax.swing.JButton btjoin;
    private javax.swing.JButton btoverlap;
    private javax.swing.JComboBox<String> cbemail2;
    private javax.swing.JComboBox<String> cbtel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JLabel laemail;
    private javax.swing.JLabel laid;
    private javax.swing.JLabel lajumin;
    private javax.swing.JLabel laname;
    private javax.swing.JLabel lapwd;
    private javax.swing.JLabel lapwdcheck;
    private javax.swing.JLabel lapwdequals;
    private javax.swing.JLabel latel;
    private javax.swing.JTextField tfemail1;
    private javax.swing.JTextField tfemail3;
    private javax.swing.JTextField tfid;
    private javax.swing.JTextField tfjumin1;
    private javax.swing.JPasswordField tfjumin2;
    private javax.swing.JTextField tfname;
    private javax.swing.JPasswordField tfpwd;
    private javax.swing.JPasswordField tfpwdcheck;
    private javax.swing.JTextField tftel2;
    private javax.swing.JTextField tftel3;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        try {
            if(e.getSource()==btjoin){
                if(flag==MEMBER_REGISTER)
                    ujoin();
                else if(flag==MEMBER_EDIT)
                    umodify();
            }else if(e.getSource()==btoverlap){
                idcheck();
            }else if(e.getSource()==btcancel){
                this.dispose();
            }
        } catch (SQLException ex) {
            Logger.getLogger(Join.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    private void init() {
        dto = new BankUserDTO();
        dao = new BankUserDAO();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        tfemail3.setEnabled(false);
        id_check=0;
        jumin_check=0;
    }
    
    
    private void addMotion() {
        btcancel.addActionListener(this);
        btjoin.addActionListener(this);
        btoverlap.addActionListener(this);
        tfpwdcheck.addKeyListener(this);
        tfjumin1.addKeyListener(this);
        tfjumin2.addKeyListener(this);
        tftel2.addKeyListener(this);
        tftel3.addKeyListener(this);
        cbemail2.addItemListener(new ItemListener(){
            @Override
            public void itemStateChanged(ItemEvent e) {
                if(e.getSource()==cbemail2){
                    if(e.getStateChange()==ItemEvent.SELECTED){
                        if(e.getItem().equals("직접입력")){
                            tfemail3.setEnabled(true);
                            tfemail3.requestFocus();
                        }else{
                            tfemail3.setEnabled(false);
                            tfemail3.setText("");
                        }
                    }
                }
            }
            
        });
        
    }

    private void ujoin() throws SQLException {
        String id = tfid.getText();
        String pwd = tfpwd.getText();
        String pwdcheck = tfpwdcheck.getText();
        String name = tfname.getText();
        String jumin1 = tfjumin1.getText();
        String jumin2 = tfjumin2.getText();
        String tel1 =(String)cbtel1.getSelectedItem();
        String tel2 = tftel2.getText();
        String tel3 =tftel3.getText();
        String email1 = tfemail1.getText();
        String email2 = (String)cbemail2.getSelectedItem();
        String email3 = tfemail3.getText();
        String email="";
        String tel="";
        String jumin="";
        
        if(id==null || id.isEmpty()){
            JOptionPane.showMessageDialog(this, "아이디를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfid.requestFocus();
            return;
        }
        if(pwd==null || pwd.isEmpty()){
            JOptionPane.showMessageDialog(this, "비밀번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfpwd.requestFocus();
            return;
        }
        if(pwdcheck==null || pwdcheck.isEmpty() || !(pwdcheck.equals(pwd))){
            JOptionPane.showMessageDialog(this, "비밀번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfpwdcheck.requestFocus();
            return;
        }
        if(name==null || name.isEmpty()){
            JOptionPane.showMessageDialog(this, "이름을 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfname.requestFocus();
            return;
        }
        if(jumin1==null || jumin1.isEmpty() || jumin2==null || jumin2.isEmpty()){
            JOptionPane.showMessageDialog(this, "주민번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfjumin1.requestFocus();
            return;
        }
        if(tel2==null || tel2.isEmpty() || tel3==null || tel3.isEmpty()){
            JOptionPane.showMessageDialog(this, "전화번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tftel2.requestFocus();
            return;
        }
        if(id_check!=ID_NEW){
            JOptionPane.showMessageDialog(this, "아이디 중복 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tftel2.requestFocus();
            return;
        }
        
        jumin=jumin1+jumin2;
        tel=tel1+"-"+tel2+"-"+tel3;
        if(email2.equals("직접입력"))
            email=email1+"@"+email3;
        else
            email=email1+"@"+email2;
        
        jumincheck(jumin);
        if(jumin_check!=JUMIN_NEW){
            tfjumin1.requestFocus();
            return;
        }
        
        dto.setId(id);
        dto.setPwd(pwd);
        dto.setName(name);
        dto.setEmail(email);
        dto.setJumin(Long.parseLong(jumin));
        dto.setTel(tel);
        
        int j = dao.insertUser(dto);
            
        if(j>0){
            JOptionPane.showMessageDialog(this, "가입완료","회원가입",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
    }//ujoin()

    private void idcheck() throws SQLException {
        String id = tfid.getText();
        
        if(id==null || id.isEmpty()){
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요","중복확인",JOptionPane.INFORMATION_MESSAGE);
            tfid.requestFocus();
            return;
        }
        
        if(dao.idCheck(id)){
            JOptionPane.showMessageDialog(this, "중복된 아이디입니다.","중복확인",JOptionPane.INFORMATION_MESSAGE);
            tfid.setText("");
            id_check=ID_OVERLAP;
        }
        else{
            JOptionPane.showMessageDialog(this, "사용가능한 아이디입니다.","중복확인",JOptionPane.INFORMATION_MESSAGE);
            id_check=ID_NEW;
        }
    }//idcheck()
    
    private void jumincheck(String jumin) throws SQLException{
        if(dao.juminCheck(jumin)){
            JOptionPane.showMessageDialog(this, "이미 가입된 주민등록번호입니다.","주민등록번호",JOptionPane.INFORMATION_MESSAGE);
            tfjumin1.setText("");
            tfjumin2.setText("");
            jumin_check=JUMIN_OVERLAP;
        }
        else{
            jumin_check=JUMIN_NEW;
        }
    }
    
    @Override
    public void keyTyped(KeyEvent e) {
    }

    @Override
    public void keyPressed(KeyEvent e) {
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if(e.getSource()==tfpwdcheck){
            String p1= tfpwd.getText();
            String p2= tfpwdcheck.getText();
            
            if(p1.equals(p2)){
                lapwdequals.setText("비밀번호 일치");
            }else
                lapwdequals.setText("비밀번호 불일치");
        
        }else if(e.getSource()== tfjumin1){
            String s = tfjumin1.getText();
            if(!(digitcheck(s))){
                tfjumin1.setText("");
            }else if(s.length()>6){
                s=s.substring(0,6);
                tfjumin1.setText(s);
            }
            if(tfjumin1.getText().length()==6)
                tfjumin2.requestFocus();
        
        }else if(e.getSource()==tfjumin2){
            String s = tfjumin2.getText();
            if(!(digitcheck(s))){
                tfjumin2.setText("");
            }
            else if(s.length()>7){
                s=s.substring(0,7);
                tfjumin2.setText(s);
            }
                
        }else if(e.getSource()==tftel2){
            String s = tftel2.getText();
            if(!(digitcheck(s))){
                tftel2.setText("");
            }else if(s.length()>4){
                s=s.substring(0,4);
                tftel2.setText(s);
            }
            if(tftel2.getText().length()==4)
                tftel3.requestFocus();
            
        }else if(e.getSource()==tftel3){
            String s =tftel3.getText();
            if(!(digitcheck(s))){
                tftel3.setText("");
            }else if(s.length()>4){
                s=s.substring(0,4);
                tftel3.setText(s);
            }
        }    
    }
    
    public boolean digitcheck(String s){
        boolean bool =true;
        for(int i=0; i<s.length(); i++){
            if(!(Character.isDigit(s.charAt(i)))){
                bool=false;
                JOptionPane.showMessageDialog(this, "숫자만 입력가능합니다.");
                break;
            }
        }
        return bool;
    }
    
    private void memberforc() {
        if(flag==MEMBER_EDIT){ //회원수정
            setTitle("회원 정보 수정");
            setEditing();
            showByUser();
        }
    }

    private void setEditing() {
        tfid.setEnabled(false);
        tfjumin1.setEnabled(false);
        tfjumin2.setEnabled(false);
        tfname.setEnabled(false);
        btoverlap.setEnabled(false);
    }

    private void showByUser() {
        tfid.setText(BankUserService.getUserid());
        tfname.setText(BankUserService.getUsername());
        String s = Long.toString(BankUserService.getUserjumin());
        s=s.substring(0,6);
        tfjumin1.setText(s);
        
    }

    private void umodify() throws SQLException {
        String pwd = tfpwd.getText();
        String pwdcheck = tfpwdcheck.getText();
        String tel1 =(String)cbtel1.getSelectedItem();
        String tel2 = tftel2.getText();
        String tel3 =tftel3.getText();
        String email1 = tfemail1.getText();
        String email2 = (String)cbemail2.getSelectedItem();
        String email3 = tfemail3.getText();
        String email="";
        String tel="";
        
        if(pwd==null || pwd.isEmpty()){
            JOptionPane.showMessageDialog(this, "비밀번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfpwd.requestFocus();
            return;
        }
        if(pwdcheck==null || pwdcheck.isEmpty() || !(pwdcheck.equals(pwd))){
            JOptionPane.showMessageDialog(this, "비밀번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tfpwdcheck.requestFocus();
            return;
        }

        if(tel2==null || tel2.isEmpty() || tel3==null || tel3.isEmpty()){
            JOptionPane.showMessageDialog(this, "전화번호를 확인하세요","회원가입",JOptionPane.INFORMATION_MESSAGE);
            tftel2.requestFocus();
            return;
        }
        
        tel=tel1+"-"+tel2+"-"+tel3;
        if(email2.equals("직접입력"))
            email=email1+"@"+email3;
        else
            email=email1+"@"+email2;
        

        
        dto.setPwd(pwd);
        dto.setEmail(email);
        dto.setTel(tel);
        dto.setSeq(BankUserService.getUserno());
        System.out.println(dto.getSeq());
        
        int j = dao.updateUser(dto);
            
        if(j>0){
            JOptionPane.showMessageDialog(this, "수정완료","회원 정보 수정",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }
    }
    
}
